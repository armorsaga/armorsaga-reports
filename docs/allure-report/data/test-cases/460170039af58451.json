{"uid":"460170039af58451","name":"test_tutorial_flow7","fullName":"tests.test_check_tutorial_flow#test_tutorial_flow7","historyId":"e4dd74900f0a5e406f8e7e10e6d8f463","time":{"start":1728314271119,"stop":1728314276526,"duration":5407},"status":"failed","statusMessage":"AssertionError: assert '' == \"Select 'Join... as you need.\"\n  \n  - Select 'Join' OR 'Union' to merge datasets. You can as many data sets as you need.","statusTrace":"browser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8d34bef5a67e7f00f298f3ac5493c45f\")>\n\n    @pytest.mark.run(order=7)\n    def test_tutorial_flow7(browser):\n        browser.get('http://localhost:8000/home/')\n        time.sleep(1)\n        browser.find_element(By.XPATH, \"//a[@data-track-id='main-navigation--flows']\").click()\n        time.sleep(1)\n        browser.find_element(By.XPATH, \"//a[@data-track-data='4 | Tutorial 7. Data integration. Merge multiple datasets']\").click()\n        time.sleep(2)\n        flow7note1 = browser.find_element(By.XPATH, \"//div[@data-id='b57b2ad5-1124-4baf-8d97-afda222c5e73']\")\n>       assert flow7note1.text == \"Select 'Join' OR 'Union' to merge datasets. You can as many data sets as you need.\"\nE       assert '' == \"Select 'Join... as you need.\"\nE         \nE         - Select 'Join' OR 'Union' to merge datasets. You can as many data sets as you need.\n\ntests\\test_check_tutorial_flow.py:112: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"browser","time":{"start":1728314236448,"stop":1728314238186,"duration":1738},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"afterStages":[{"name":"browser::0","time":{"start":1728314417271,"stop":1728314419395,"duration":2124},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":false,"attachmentStep":false,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"tag","value":"run(order=7)"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_check_tutorial_flow"},{"name":"host","value":"ARMORSAGA"},{"name":"thread","value":"6972-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_check_tutorial_flow"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=7)"]},"source":"460170039af58451.json","parameterValues":[]}